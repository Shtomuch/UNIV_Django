name: Django CI + Publish (GHCR)

on:
  push:
    branches: [ "main" ]          # push у main → тести + publish
  pull_request:                   # PR → лише тести

# токен має право пушити пакети
permissions:
  contents: read
  packages: write

jobs:
# ------------------------------------------------------------
# 1) Build → migrate → test
# ------------------------------------------------------------
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Build image (load into runner)
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: local/test-image:latest
          load: true               # образ буде всередині раннера

      - name: Run migrations + tests
        run: |
          docker run --rm local/test-image:latest sh -c "
            python manage.py migrate --noinput &&
            python manage.py test --verbosity 2
          "

# ------------------------------------------------------------
# 2) Publish у GHCR (лише push у main, після успішних тестів)
# ------------------------------------------------------------
  publish:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      # ---- сформувати lower‑case ім'я образу ----
      - name: Set image name (lower case)
        id: meta
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_LC=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          echo "image=ghcr.io/${OWNER_LC}/${REPO_LC}-web" >> "$GITHUB_OUTPUT"

      # ---- логін у GHCR ----
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ---- build & push ----
      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.image }}:latest
            ${{ steps.meta.outputs.image }}:${{ github.sha }}
